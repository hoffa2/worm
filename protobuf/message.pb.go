// Code generated by protoc-gen-go.
// source: protobuf/message.proto
// DO NOT EDIT!

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	protobuf/message.proto

It has these top-level messages:
	Addnode
	Target
	FromClient
	ToClient
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Addnode struct {
	NodeId int32 `protobuf:"varint,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *Addnode) Reset()                    { *m = Addnode{} }
func (m *Addnode) String() string            { return proto.CompactTextString(m) }
func (*Addnode) ProtoMessage()               {}
func (*Addnode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Addnode) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

type Target struct {
	Target int32 `protobuf:"varint,1,opt,name=target" json:"target,omitempty"`
}

func (m *Target) Reset()                    { *m = Target{} }
func (m *Target) String() string            { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()               {}
func (*Target) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Target) GetTarget() int32 {
	if m != nil {
		return m.Target
	}
	return 0
}

//
type FromClient struct {
	// Types that are valid to be assigned to Msg:
	//	*FromClient_ChangeTarget
	//	*FromClient_ShutdownTarget
	//	*FromClient_GetTarget
	Msg isFromClient_Msg `protobuf_oneof:"msg"`
}

func (m *FromClient) Reset()                    { *m = FromClient{} }
func (m *FromClient) String() string            { return proto.CompactTextString(m) }
func (*FromClient) ProtoMessage()               {}
func (*FromClient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isFromClient_Msg interface {
	isFromClient_Msg()
}

type FromClient_ChangeTarget struct {
	ChangeTarget int32 `protobuf:"varint,1,opt,name=changeTarget,oneof"`
}
type FromClient_ShutdownTarget struct {
	ShutdownTarget bool `protobuf:"varint,2,opt,name=shutdownTarget,oneof"`
}
type FromClient_GetTarget struct {
	GetTarget bool `protobuf:"varint,3,opt,name=getTarget,oneof"`
}

func (*FromClient_ChangeTarget) isFromClient_Msg()   {}
func (*FromClient_ShutdownTarget) isFromClient_Msg() {}
func (*FromClient_GetTarget) isFromClient_Msg()      {}

func (m *FromClient) GetMsg() isFromClient_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *FromClient) GetChangeTarget() int32 {
	if x, ok := m.GetMsg().(*FromClient_ChangeTarget); ok {
		return x.ChangeTarget
	}
	return 0
}

func (m *FromClient) GetShutdownTarget() bool {
	if x, ok := m.GetMsg().(*FromClient_ShutdownTarget); ok {
		return x.ShutdownTarget
	}
	return false
}

func (m *FromClient) GetGetTarget() bool {
	if x, ok := m.GetMsg().(*FromClient_GetTarget); ok {
		return x.GetTarget
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FromClient) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FromClient_OneofMarshaler, _FromClient_OneofUnmarshaler, _FromClient_OneofSizer, []interface{}{
		(*FromClient_ChangeTarget)(nil),
		(*FromClient_ShutdownTarget)(nil),
		(*FromClient_GetTarget)(nil),
	}
}

func _FromClient_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FromClient)
	// msg
	switch x := m.Msg.(type) {
	case *FromClient_ChangeTarget:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ChangeTarget))
	case *FromClient_ShutdownTarget:
		t := uint64(0)
		if x.ShutdownTarget {
			t = 1
		}
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *FromClient_GetTarget:
		t := uint64(0)
		if x.GetTarget {
			t = 1
		}
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("FromClient.Msg has unexpected type %T", x)
	}
	return nil
}

func _FromClient_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FromClient)
	switch tag {
	case 1: // msg.changeTarget
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Msg = &FromClient_ChangeTarget{int32(x)}
		return true, err
	case 2: // msg.shutdownTarget
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Msg = &FromClient_ShutdownTarget{x != 0}
		return true, err
	case 3: // msg.getTarget
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Msg = &FromClient_GetTarget{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _FromClient_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FromClient)
	// msg
	switch x := m.Msg.(type) {
	case *FromClient_ChangeTarget:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.ChangeTarget))
	case *FromClient_ShutdownTarget:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += 1
	case *FromClient_GetTarget:
		n += proto.SizeVarint(3<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ToClient struct {
	// Types that are valid to be assigned to Msg:
	//	*ToClient_Addnode
	//	*ToClient_Target
	Msg isToClient_Msg `protobuf_oneof:"msg"`
}

func (m *ToClient) Reset()                    { *m = ToClient{} }
func (m *ToClient) String() string            { return proto.CompactTextString(m) }
func (*ToClient) ProtoMessage()               {}
func (*ToClient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isToClient_Msg interface {
	isToClient_Msg()
}

type ToClient_Addnode struct {
	Addnode *Addnode `protobuf:"bytes,1,opt,name=addnode,oneof"`
}
type ToClient_Target struct {
	Target *Target `protobuf:"bytes,2,opt,name=target,oneof"`
}

func (*ToClient_Addnode) isToClient_Msg() {}
func (*ToClient_Target) isToClient_Msg()  {}

func (m *ToClient) GetMsg() isToClient_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *ToClient) GetAddnode() *Addnode {
	if x, ok := m.GetMsg().(*ToClient_Addnode); ok {
		return x.Addnode
	}
	return nil
}

func (m *ToClient) GetTarget() *Target {
	if x, ok := m.GetMsg().(*ToClient_Target); ok {
		return x.Target
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ToClient) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ToClient_OneofMarshaler, _ToClient_OneofUnmarshaler, _ToClient_OneofSizer, []interface{}{
		(*ToClient_Addnode)(nil),
		(*ToClient_Target)(nil),
	}
}

func _ToClient_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ToClient)
	// msg
	switch x := m.Msg.(type) {
	case *ToClient_Addnode:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Addnode); err != nil {
			return err
		}
	case *ToClient_Target:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Target); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ToClient.Msg has unexpected type %T", x)
	}
	return nil
}

func _ToClient_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ToClient)
	switch tag {
	case 1: // msg.addnode
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Addnode)
		err := b.DecodeMessage(msg)
		m.Msg = &ToClient_Addnode{msg}
		return true, err
	case 2: // msg.target
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Target)
		err := b.DecodeMessage(msg)
		m.Msg = &ToClient_Target{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ToClient_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ToClient)
	// msg
	switch x := m.Msg.(type) {
	case *ToClient_Addnode:
		s := proto.Size(x.Addnode)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ToClient_Target:
		s := proto.Size(x.Target)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Addnode)(nil), "addnode")
	proto.RegisterType((*Target)(nil), "target")
	proto.RegisterType((*FromClient)(nil), "FromClient")
	proto.RegisterType((*ToClient)(nil), "ToClient")
}

func init() { proto.RegisterFile("protobuf/message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x03, 0x0b, 0x28,
	0x29, 0x71, 0xb1, 0x27, 0xa6, 0xa4, 0xe4, 0xe5, 0xa7, 0xa4, 0x0a, 0x89, 0x73, 0xb1, 0x83, 0xe8,
	0xf8, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x36, 0x10, 0xd7, 0x33, 0x45, 0x49,
	0x81, 0x8b, 0xad, 0x24, 0xb1, 0x28, 0x3d, 0xb5, 0x44, 0x48, 0x0c, 0xc6, 0x82, 0xa9, 0x80, 0xf0,
	0x94, 0x9a, 0x19, 0xb9, 0xb8, 0xdc, 0x8a, 0xf2, 0x73, 0x9d, 0x73, 0x32, 0x53, 0xf3, 0x4a, 0x84,
	0x54, 0xb8, 0x78, 0x92, 0x33, 0x12, 0xf3, 0xd2, 0x53, 0x43, 0x90, 0x14, 0x7b, 0x30, 0x04, 0xa1,
	0x88, 0x0a, 0x69, 0x70, 0xf1, 0x15, 0x67, 0x94, 0x96, 0xa4, 0xe4, 0x97, 0xe7, 0x41, 0xd5, 0x31,
	0x01, 0xd5, 0x71, 0x00, 0xd5, 0xa1, 0x89, 0x0b, 0xc9, 0x71, 0x71, 0x02, 0x29, 0xa8, 0x22, 0x66,
	0xa8, 0x22, 0x84, 0x90, 0x13, 0x2b, 0x17, 0x73, 0x6e, 0x71, 0xba, 0x52, 0x14, 0x17, 0x47, 0x48,
	0x3e, 0xdc, 0x09, 0x30, 0x7f, 0x81, 0x6d, 0xe7, 0x36, 0xe2, 0xd0, 0x83, 0xf2, 0x81, 0x5a, 0xe1,
	0x5e, 0x56, 0x84, 0xfb, 0x87, 0x09, 0xac, 0x88, 0x5d, 0x0f, 0xc2, 0x05, 0xaa, 0x81, 0x4a, 0x40,
	0xcd, 0x4e, 0x62, 0x03, 0x07, 0x97, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x57, 0x03, 0xb8,
	0x48, 0x01, 0x00, 0x00,
}
